


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1022 Introduction to Computing II 2018/2019
    3 00000000         ; Lab 1 - Matrix Multiplication
    4 00000000         ;
    5 00000000         
    6 00000000 00000004 
                       N       EQU              4
    7 00000000         
    8 00000000                 AREA             globals, DATA, READWRITE
    9 00000000         
   10 00000000         ; result matrix R
   11 00000000         
   12 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       ARR_R   SPACE            N*N*4       ; 4 * 4 * word-size
                                                             values
   13 00000040         
   14 00000040         
   15 00000040                 AREA             RESET, CODE, READONLY
   16 00000000                 ENTRY
   17 00000000         
   18 00000000 E59F00F8        LDR              R0, =ARR_A
   19 00000004 E59F10F8        LDR              R1, =ARR_B
   20 00000008 E59F20F8        LDR              R2, =ARR_R
   21 0000000C E3A03004        LDR              R3, =N
   22 00000010         
   23 00000010         ; your program goes here
   24 00000010 E3A04000        MOV              R4, #0      ; i = 0
   25 00000014 E1540003 
                       Fori    CMP              R4, R3      ; i < n?
   26 00000018 2A000017        BHS              eFori       ; end for loop
   27 0000001C E3A05000        MOV              R5, #0      ; j = 0
   28 00000020 E1550003 
                       Forj    CMP              R5, R3      ; j < n?
   29 00000024 2A000012        BHS              eForj       ; end j loop
   30 00000028 E3A07000        MOV              R7, #0      ; r = 0
   31 0000002C E3A06000        MOV              R6, #0      ; k = 0
   32 00000030 E1560003 
                       Fork    CMP              R6, R3      ; k < n
   33 00000034 2A000009        BHS              eFork       ; end k loop



ARM Macro Assembler    Page 2 


   34 00000038 E0080394        MUL              R8, R4, R3  ; R8 = i*N 
   35 0000003C E0888006        ADD              R8, R8, R6  ; R8 = 1D index of 
                                                            A[i,k]
   36 00000040 E7909108        LDR              R9, [R0,R8,LSL#2] ; R9 = A[i,k]
                                                            
   37 00000044 E0080396        MUL              R8, R6, R3  ; R8 = j*N
   38 00000048 E0888005        ADD              R8, R8, R5  ; R8 = 1D index of 
                                                            B[j,k]
   39 0000004C E791A108        LDR              R10, [R1,R8,LSL#2] 
                                                            ; R10 = B[j,k]
   40 00000050 E009099A        MUL              R9, R10, R9 ; A[i,k] * B[k,j]
   41 00000054 E0877009        ADD              R7, R7, R9  ; r += A[i,k] * B[k
                                                            ,j]
   42 00000058 E2866001        ADD              R6, R6, #1  ; k++
   43 0000005C EAFFFFF3        B                Fork        ; go to for(k)
   44 00000060 E0080394 
                       eFork   MUL              R8, R4, R3  ; R8 = i*N
   45 00000064 E0888005        ADD              R8, R8, R5  ; R8 = 1D index of 
                                                            R[i,j]
   46 00000068 E7827108        STR              R7, [R2,R8,LSL#2] ; R[i,j] = r
   47 0000006C E2855001        ADD              R5, R5, #1  ; j++
   48 00000070 EAFFFFEA        B                Forj        ; for(j)
   49 00000074 E2844001 
                       eForj   ADD              R4, R4, #1  ; i++
   50 00000078 EAFFFFE5        B                Fori        ; for(i)
   51 0000007C         eFori
   52 0000007C         
   53 0000007C EAFFFFFE 
                       STOP    B                STOP
   54 00000080         
   55 00000080         ; two constant value matrices, A and B
   56 00000080         
   57 00000080 00000001 
              00000002 
              00000003 
              00000004 ARR_A   DCD              1,  2,  3,  4
   58 00000090 00000005 
              00000006 
              00000007 
              00000008         DCD              5,  6,  7,  8
   59 000000A0 00000009 
              0000000A 
              0000000B 
              0000000C         DCD              9, 10, 11, 12
   60 000000B0 0000000D 
              0000000E 
              0000000F 
              00000010         DCD              13, 14, 15, 16
   61 000000C0         
   62 000000C0 00000001 
              00000002 
              00000003 
              00000004 ARR_B   DCD              1,  2,  3,  4
   63 000000D0 00000005 
              00000006 
              00000007 
              00000008         DCD              5,  6,  7,  8
   64 000000E0 00000009 
              0000000A 



ARM Macro Assembler    Page 3 


              0000000B 
              0000000C         DCD              9, 10, 11, 12
   65 000000F0 0000000D 
              0000000E 
              0000000F 
              00000010         DCD              13, 14, 15, 16
   66 00000100         
   67 00000100                 END
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab1-matmul.d -o.\objects\lab1-matmul.o -IC:\Keil_v5\ARM\RV31\INC -IC:\K
eil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 
1" --predefine="__UVISION_VERSION SETA 526" --list=.\listings\lab1-matmul.lst l
ab1-matmul.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARR_R 00000000

Symbol: ARR_R
   Definitions
      At line 12 in file lab1-matmul.s
   Uses
      At line 20 in file lab1-matmul.s
Comment: ARR_R used once
globals 00000000

Symbol: globals
   Definitions
      At line 8 in file lab1-matmul.s
   Uses
      None
Comment: globals unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARR_A 00000080

Symbol: ARR_A
   Definitions
      At line 57 in file lab1-matmul.s
   Uses
      At line 18 in file lab1-matmul.s
Comment: ARR_A used once
ARR_B 000000C0

Symbol: ARR_B
   Definitions
      At line 62 in file lab1-matmul.s
   Uses
      At line 19 in file lab1-matmul.s
Comment: ARR_B used once
Fori 00000014

Symbol: Fori
   Definitions
      At line 25 in file lab1-matmul.s
   Uses
      At line 50 in file lab1-matmul.s
Comment: Fori used once
Forj 00000020

Symbol: Forj
   Definitions
      At line 28 in file lab1-matmul.s
   Uses
      At line 48 in file lab1-matmul.s
Comment: Forj used once
Fork 00000030

Symbol: Fork
   Definitions
      At line 32 in file lab1-matmul.s
   Uses
      At line 43 in file lab1-matmul.s
Comment: Fork used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 15 in file lab1-matmul.s
   Uses
      None
Comment: RESET unused
STOP 0000007C

Symbol: STOP
   Definitions
      At line 53 in file lab1-matmul.s
   Uses
      At line 53 in file lab1-matmul.s
Comment: STOP used once
eFori 0000007C

Symbol: eFori



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 51 in file lab1-matmul.s
   Uses
      At line 26 in file lab1-matmul.s
Comment: eFori used once
eForj 00000074

Symbol: eForj
   Definitions
      At line 49 in file lab1-matmul.s
   Uses
      At line 29 in file lab1-matmul.s
Comment: eForj used once
eFork 00000060

Symbol: eFork
   Definitions
      At line 44 in file lab1-matmul.s
   Uses
      At line 33 in file lab1-matmul.s
Comment: eFork used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 00000004

Symbol: N
   Definitions
      At line 6 in file lab1-matmul.s
   Uses
      At line 12 in file lab1-matmul.s
      At line 12 in file lab1-matmul.s
      At line 21 in file lab1-matmul.s

1 symbol
347 symbols in table
