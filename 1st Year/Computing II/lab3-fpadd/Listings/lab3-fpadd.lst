


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1022 Introduction to Computing II 2018/2019
    3 00000000         ; Lab 3 - Floating-Point Addition
    4 00000000         ;
    5 00000000         
    6 00000000                 AREA             RESET, CODE, READONLY
    7 00000000                 ENTRY
    8 00000000         
    9 00000000         ;
   10 00000000         ; Test Data
   11 00000000         ;
   12 00000000 41C40000 
                       FP_A    EQU              0x41C40000
   13 00000000 41960000 
                       FP_B    EQU              0x41960000
   14 00000000 F1200000 
                       FP_C    EQU              0xF1200000
   15 00000000         
   16 00000000         ; initialize system stack pointer (SP)
   17 00000000         
   18 00000000 E59FD110        LDR              SP, =0x40010000
   19 00000004         
   20 00000004 E59F0110        LDR              r0, =FP_B   ; test value A
   21 00000008 E59F1110        LDR              r1, =FP_A   ; test value B
   22 0000000C EB000029        BL               fpadd
   23 00000010         
   24 00000010 EAFFFFFE 
                       stop    B                stop
   25 00000014         
   26 00000014         
   27 00000014         ;
   28 00000014         ; fpdecode
   29 00000014         ; decodes an IEEE 754 floating point value to the signed
                        (2's complement)
   30 00000014         ; fraction and a signed 2's complement (unbiased) expone
                       nt
   31 00000014         ; parameters:
   32 00000014         ; r0 - ieee 754 float
   33 00000014         ; return:
   34 00000014         ; r0 - fraction (signed 2's complement word)
   35 00000014         ; r1 - exponent (signed 2's complement word)
   36 00000014         ;
   37 00000014         fpdecode
   38 00000014         
   39 00000014 E92D03F0        PUSH{R4-R9}
   40 00000018 E1A04BA0        MOV              R4,R0,LSR#23 ;Clears fraction
   41 0000001C E1A04B84        MOV              R4,R4,LSL#23 ;clears fraction
   42 00000020 E1C05004        BIC              R5,R0,R4    ;Bit clear the expo
                                                            nent
   43 00000024 E1A04480        MOV              R4,R0,LSL#9 ;Clear exponent
   44 00000028 E1A044A4        MOV              R4,R4,LSR#9 ;Clear exponent
   45 0000002C E1C04004        BIC              R4,R0,R4    ;exponent
   46 00000030 E3A07102        MOV              R7,#0x80000000 ;last bit
   47 00000034 E0078004        AND              R8,R7,R4    ;check last bit
   48 00000038 E3580102        CMP              R8,#0x80000000 ;If negative
   49 0000003C 0A000008        BEQ              TWO_COMPLEMENT
   50 00000040         
   51 00000040         NORMALIZE
   52 00000040 E1A04BA4        MOV              R4,R4,LSR#23 



ARM Macro Assembler    Page 2 


                                                            ;normalise exponent
                                                            
   53 00000044 E244407F        SUB              R4,R4,#127  ;take bias away
   54 00000048 E1A00005        MOV              R0,R5       ;return fraction 
   55 0000004C E3A06001        MOV              R6,#1       ;one bit
   56 00000050 E1A06C06        MOV              R6,R6,LSL#24 ;
   57 00000054 E1800006        ORR              R0,R0,R6    ;add extra bit
   58 00000058 E1A01004        MOV              R1,R4       ;return exponent
   59 0000005C E8BD03F0        POP{R4-R9}
   60 00000060 E12FFF1E        BX               LR
   61 00000064         
   62 00000064         TWO_COMPLEMENT
   63 00000064 E3E09000        MOV              R9,#0xFFFFFFFF
   64 00000068 E0255009        EOR              R5,R5,R9    ;Change all bits
   65 0000006C E2855001        ADD              R5,R5,#1    ;2's complement
   66 00000070 EAFFFFF2        B                NORMALIZE
   67 00000074         ;
   68 00000074         ; fpencode
   69 00000074         ; encodes an IEEE 754 value using a specified fraction a
                       nd exponent
   70 00000074         ; parameters:
   71 00000074         ; r0 - fraction (signed 2's complement word)
   72 00000074         ; r1 - exponent (signed 2's complement word)
   73 00000074         ; result:
   74 00000074         ; r0 - ieee 754 float
   75 00000074         ;
   76 00000074         
   77 00000074         fpencode
   78 00000074         
   79 00000074 E92D0030        PUSH{R4,R5}
   80 00000078 E281107F        ADD              R1,R1,#127  ;add bias
   81 0000007C E1A01B81        MOV              R1,R1,LSL#23 
                                                            ;return to position
                                                            
   82 00000080 E3A05001        MOV              R5,#1
   83 00000084 E1A05C85        MOV              R5,R5,LSL#25 ;check if >
   84 00000088 E1500005        CMP              R0,R5
   85 0000008C DA000005        BLE              TWO_COMPLEMENT1
   86 00000090         NEXT1
   87 00000090 E3A04001        MOV              R4,#1       ;one bit
   88 00000094 E1A04C04        MOV              R4,R4,LSL#24 ;Move to 24th bit
   89 00000098 E1C00004        BIC              R0,R0,R4    ;Clear 24th bit
   90 0000009C E1800001        ORR              R0,R0,R1    ;Combine bits
   91 000000A0 E8BD0030        POP{R4,R5}
   92 000000A4 E12FFF1E        BX               LR
   93 000000A8         
   94 000000A8         TWO_COMPLEMENT1
   95 000000A8 E3E05000        MOV              R5,#0xFFFFFFFF
   96 000000AC E0200005        EOR              R0,R0,R5    ;change bits
   97 000000B0 E2800001        ADD              R0,R0,#1    ;2's complement
   98 000000B4 EAFFFFF5        B                NEXT1
   99 000000B8         
  100 000000B8         
  101 000000B8         ;
  102 000000B8         ; fpadd
  103 000000B8         ; adds two IEEE 754 values
  104 000000B8         ; parameters:
  105 000000B8         ; r0 - ieee 754 float A
  106 000000B8         ; r1 - ieee 754 float B



ARM Macro Assembler    Page 3 


  107 000000B8         ; return:
  108 000000B8         ; r0 - ieee 754 float A+B
  109 000000B8         ;
  110 000000B8         fpadd
  111 000000B8         
  112 000000B8 E92D4FF0        PUSH             {R4-R11,LR}
  113 000000BC E1A02000        MOV              R2,R0       ;change postion of 
                                                            values
  114 000000C0 E1A03001        MOV              R3,R1       ;change postion of 
                                                            values
  115 000000C4 EBFFFFD2        BL               fpdecode
  116 000000C8         
  117 000000C8 E1A04000        MOV              R4,R0       ;temp fraction
  118 000000CC E1A05001        MOV              R5,R1       ;temp exponent
  119 000000D0 E1A00003        MOV              R0,R3       ;value to change
  120 000000D4 EBFFFFCE        BL               fpdecode
  121 000000D8         
  122 000000D8 E1A06000        MOV              R6,R0       ;temp fraction
  123 000000DC E1A07001        MOV              R7,R1       ;temp exponent
  124 000000E0 E1570005        CMP              R7,R5       ;if (exponent1 > ex
                                                            ponent2>)
  125 000000E4 AA000007        BGE              exp1BIG
  126 000000E8         
  127 000000E8 E0458007        SUB              R8,R5,R7    ;else sub greater e
                                                            xponent1
  128 000000EC E1A06836        MOV              R6,R6,LSR R8 ;bring fraction to
                                                             larger exponent 
  129 000000F0 E1A0A005        MOV              R10,R5      ;temp exponent
  130 000000F4         return
  131 000000F4 E0869004        ADD              R9,R6,R4    ;add fractions
  132 000000F8 E1A00009        MOV              R0,R9       ;fraction  
  133 000000FC E1A0100A        MOV              R1,R10      ;exponent
  134 00000100 EBFFFFDB        BL               fpencode
  135 00000104 E8BD8FF0        POP              {R4-R11,PC}
  136 00000108         exp1BIG
  137 00000108 E0478005        SUB              R8,R7,R5    ;sub greater expone
                                                            nt
  138 0000010C E1A04834        MOV              R4,R4,LSR R8 ;bring fraction to
                                                             larger exponent 
  139 00000110 E1A0A007        MOV              R10,R7      ;temp exponent
  140 00000114 EAFFFFF6        B                return
  141 00000118         
  142 00000118                 END
              40010000 
              41960000 
              41C40000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab3-fpadd.d -o.\objects\lab3-fpadd.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Kei
l_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1"
 --predefine="__UVISION_VERSION SETA 526" --list=.\listings\lab3-fpadd.lst lab3
-fpadd.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

NEXT1 00000090

Symbol: NEXT1
   Definitions
      At line 86 in file lab3-fpadd.s
   Uses
      At line 98 in file lab3-fpadd.s
Comment: NEXT1 used once
NORMALIZE 00000040

Symbol: NORMALIZE
   Definitions
      At line 51 in file lab3-fpadd.s
   Uses
      At line 66 in file lab3-fpadd.s
Comment: NORMALIZE used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 6 in file lab3-fpadd.s
   Uses
      None
Comment: RESET unused
TWO_COMPLEMENT 00000064

Symbol: TWO_COMPLEMENT
   Definitions
      At line 62 in file lab3-fpadd.s
   Uses
      At line 49 in file lab3-fpadd.s
Comment: TWO_COMPLEMENT used once
TWO_COMPLEMENT1 000000A8

Symbol: TWO_COMPLEMENT1
   Definitions
      At line 94 in file lab3-fpadd.s
   Uses
      At line 85 in file lab3-fpadd.s
Comment: TWO_COMPLEMENT1 used once
exp1BIG 00000108

Symbol: exp1BIG
   Definitions
      At line 136 in file lab3-fpadd.s
   Uses
      At line 125 in file lab3-fpadd.s
Comment: exp1BIG used once
fpadd 000000B8

Symbol: fpadd
   Definitions
      At line 110 in file lab3-fpadd.s
   Uses
      At line 22 in file lab3-fpadd.s
Comment: fpadd used once
fpdecode 00000014

Symbol: fpdecode



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 37 in file lab3-fpadd.s
   Uses
      At line 115 in file lab3-fpadd.s
      At line 120 in file lab3-fpadd.s

fpencode 00000074

Symbol: fpencode
   Definitions
      At line 77 in file lab3-fpadd.s
   Uses
      At line 134 in file lab3-fpadd.s
Comment: fpencode used once
return 000000F4

Symbol: return
   Definitions
      At line 130 in file lab3-fpadd.s
   Uses
      At line 140 in file lab3-fpadd.s
Comment: return used once
stop 00000010

Symbol: stop
   Definitions
      At line 24 in file lab3-fpadd.s
   Uses
      At line 24 in file lab3-fpadd.s
Comment: stop used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

FP_A 41C40000

Symbol: FP_A
   Definitions
      At line 12 in file lab3-fpadd.s
   Uses
      At line 21 in file lab3-fpadd.s
Comment: FP_A used once
FP_B 41960000

Symbol: FP_B
   Definitions
      At line 13 in file lab3-fpadd.s
   Uses
      At line 20 in file lab3-fpadd.s
Comment: FP_B used once
FP_C F1200000

Symbol: FP_C
   Definitions
      At line 14 in file lab3-fpadd.s
   Uses
      None
Comment: FP_C unused
3 symbols
348 symbols in table
