


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1022 Introduction to Computing II 2018/2019
    3 00000000         ; Lab 2 - Subroutines
    4 00000000         ;
    5 00000000         
    6 00000000 00000004 
                       N       EQU              4
    7 00000000 00000020 
                       BUFLEN  EQU              32
    8 00000000         
    9 00000000 E002C000 
                       PINSEL0 EQU              0xE002C000
   10 00000000 E000C000 
                       U0RBR   EQU              0xE000C000
   11 00000000 E000C000 
                       U0THR   EQU              0xE000C000
   12 00000000 E000C00C 
                       U0LCR   EQU              0xE000C00C
   13 00000000 E000C014 
                       U0LSR   EQU              0xE000C014
   14 00000000         
   15 00000000         
   16 00000000                 AREA             globals, DATA, READWRITE
   17 00000000         
   18 00000000         ; char buffer
   19 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    BUFFER  SPACE            BUFLEN      ; BUFLEN bytes
   20 00000020         
   21 00000020         ; result array
   22 00000020 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       ARR_R   SPACE            N*4         ; N words (4 bytes 
                                                            each)
   23 00000030         
   24 00000030         
   25 00000030                 AREA             RESET, CODE, READONLY
   26 00000000                 ENTRY
   27 00000000         
   28 00000000 EB000034        BL               inithw
   29 00000004         
   30 00000004         ;
   31 00000004         ; invoke your max subroutine to test it
   32 00000004         ;
   33 00000004         
   34 00000004         ;LDR R0, =16
   35 00000004         ;LDR R1, =-5
   36 00000004         ;BL max



ARM Macro Assembler    Page 2 


   37 00000004         
   38 00000004         ;
   39 00000004         ; invoke your gets subroutine to test it
   40 00000004         ;
   41 00000004         
   42 00000004         ;LDR R0, =BUFFER
   43 00000004         ;BL gets
   44 00000004         
   45 00000004         ;
   46 00000004         ; invoke your matmul subroutine to test it
   47 00000004         ;
   48 00000004         
   49 00000004 E59F01D0        LDR              R0, =ARR_A
   50 00000008 E59F11D0        LDR              R1, =ARR_B
   51 0000000C E59F21D0        LDR              R2, =ARR_R
   52 00000010 E3A03004        LDR              R3, =N
   53 00000014 EB000012        BL               matmul
   54 00000018         
   55 00000018         
   56 00000018 EAFFFFFE 
                       STOP    B                STOP
   57 0000001C         
   58 0000001C         
   59 0000001C         ; Subroutine max (returns the largest of 2 passed intege
                       rs)
   60 0000001C         ; Parameters:
   61 0000001C         ;  R0 = (signed word) Number 1
   62 0000001C         ;  R1 = (signed word) Number 2
   63 0000001C         ; Returns:
   64 0000001C         ;  R0 = (signed word) Larger Number
   65 0000001C         max
   66 0000001C E1500001        CMP              R0, R1
   67 00000020 AA000000        BGE              max1
   68 00000024 E1A00001        MOV              R0, R1
   69 00000028         max1
   70 00000028 E12FFF1E        BX               LR
   71 0000002C         
   72 0000002C         ; Subroutine gets (reads and stores a string of chars (u
                       ntil return is pressed) in buffer and returns number of 
                       chars read) 
   73 0000002C         ; Parameters:
   74 0000002C         ;  R0 = Start address of memory location
   75 0000002C         ; Returns:
   76 0000002C         ;  R0 = (unsigned word) number of characters
   77 0000002C         gets
   78 0000002C E92D4030        STMFD            SP!, {R4-R5, LR}
   79 00000030 E1A04000        MOV              R4, R0
   80 00000034 E3A05000        LDR              R5, =0
   81 00000038         gets1
   82 00000038 EB00002D        BL               get
   83 0000003C EB000033        BL               put
   84 00000040 E350000D        CMP              R0, #0xD
   85 00000044 0A000002        BEQ              gets2
   86 00000048 E4C40001        STRB             R0, [R4], #1
   87 0000004C E2855001        ADD              R5, R5, #1
   88 00000050 EAFFFFF8        B                gets1
   89 00000054         gets2
   90 00000054 E3A00000        LDR              R0, =0
   91 00000058 E5C40000        STRB             R0, [R4]



ARM Macro Assembler    Page 3 


   92 0000005C E1A00005        MOV              R0, R5
   93 00000060 E8BD8030        LDMFD            SP!, {R4-R5, PC}
   94 00000064         
   95 00000064         ; Subroutine matmul (Takes two NxN matrices and returns 
                       their product)
   96 00000064         ; Parameters:
   97 00000064         ;  R0 = Start address of matrix A
   98 00000064         ;  R1 = Start address of matrix B
   99 00000064         ;  R2 = Start address of result matrix
  100 00000064         ;  R3 = N = Matrix size
  101 00000064         ; Returns:
  102 00000064         ;  R0 = Start address of result matrix
  103 00000064         matmul
  104 00000064 E92D43F0        STMFD            SP!, {R4-R9 ,LR}
  105 00000068 E3A04000        LDR              R4, =0      ;R4 = i
  106 0000006C         matmul0
  107 0000006C E1540003        CMP              R4, R3
  108 00000070 2A000017        BHS              matmul1
  109 00000074 E3A05000        LDR              R5, =0      ;R5 = j
  110 00000078         matmul2
  111 00000078 E1550003        CMP              R5, R3
  112 0000007C 2A000012        BHS              matmul3
  113 00000080 E3A06000        LDR              R6, =0      ;R6 = r
  114 00000084 E3A07000        LDR              R7, =0      ;R7 = k
  115 00000088         matmul4
  116 00000088 E1570003        CMP              R7, R3
  117 0000008C 2A000009        BHS              matmul5
  118 00000090 E0080397        MUL              R8, R7, R3  ;Locate row
  119 00000094 E0888004        ADD              R8, R8, R4  ;Locate index
  120 00000098 E7908108        LDR              R8, [R0, R8, LSL #2] 
                                                            ;R8 = A[i,k]
  121 0000009C E0090395        MUL              R9, R5, R3
  122 000000A0 E0899007        ADD              R9, R9, R7
  123 000000A4 E7919109        LDR              R9, [R1, R9, LSL #2] 
                                                            ;R9 = B[k,j]
  124 000000A8 E0080899        MUL              R8, R9, R8
  125 000000AC E0866008        ADD              R6, R6, R8
  126 000000B0 E2877001        ADD              R7, R7, #1
  127 000000B4 EAFFFFF3        B                matmul4
  128 000000B8         matmul5
  129 000000B8 E0080395        MUL              R8, R5, R3
  130 000000BC E0888004        ADD              R8, R8, R4
  131 000000C0 E7826108        STR              R6, [R2, R8, LSL #2] 
                                                            ;r -> R[i,j]
  132 000000C4 E2855001        ADD              R5, R5, #1
  133 000000C8 EAFFFFEA        B                matmul2
  134 000000CC         matmul3
  135 000000CC E2844001        ADD              R4, R4, #1
  136 000000D0 EAFFFFE5        B                matmul0
  137 000000D4         matmul1
  138 000000D4 E8BD83F0        LDMFD            SP!, {R4-R9, PC}
  139 000000D8         
  140 000000D8         ;
  141 000000D8         ; inithw subroutines
  142 000000D8         ; performs hardware initialisation, including console
  143 000000D8         ; parameters:
  144 000000D8         ; none
  145 000000D8         ; return value:
  146 000000D8         ; none



ARM Macro Assembler    Page 4 


  147 000000D8         ;
  148 000000D8         inithw
  149 000000D8 E59F0108        LDR              R0, =PINSEL0 ; enable UART0 TxD
                                                             and RxD signals
  150 000000DC E3A01050        MOV              R1, #0x50
  151 000000E0 E5C01000        STRB             R1, [R0]
  152 000000E4 E59F0100        LDR              R0, =U0LCR  ; 7 data bits + par
                                                            ity
  153 000000E8 E3A01002        LDR              R1, =0x02
  154 000000EC E5C01000        STRB             R1, [R0]
  155 000000F0 E12FFF1E        BX               LR
  156 000000F4         
  157 000000F4         ;
  158 000000F4         ; get subroutine
  159 000000F4         ; returns the ASCII code of the next character read on t
                       he console
  160 000000F4         ; parameters:
  161 000000F4         ; none
  162 000000F4         ; return value:
  163 000000F4         ; R0 - ASCII code of the character read on teh console (
                       byte)
  164 000000F4         ;
  165 000000F4 E59F10F4 
                       get     LDR              R1, =U0LSR  ; R1 -> U0LSR (Line
                                                             Status Register)
  166 000000F8 E5910000 
                       get0    LDR              R0, [R1]    ; wait until
  167 000000FC E2100001        ANDS             R0, #0x01   ; receiver data
  168 00000100 0AFFFFFC        BEQ              get0        ; ready
  169 00000104 E59F10E8        LDR              R1, =U0RBR  ; R1 -> U0RBR (Rece
                                                            iver Buffer Registe
                                                            r)
  170 00000108 E5D10000        LDRB             R0, [R1]    ; get received data
                                                            
  171 0000010C E12FFF1E        BX               LR          ; return
  172 00000110         
  173 00000110         ;
  174 00000110         ; put subroutine
  175 00000110         ; writes a character to the console
  176 00000110         ; parameters:
  177 00000110         ; R0 - ASCII code of the character to write
  178 00000110         ; return value:
  179 00000110         ; none
  180 00000110         ;
  181 00000110 E59F10D8 
                       put     LDR              R1, =U0LSR  ; R1 -> U0LSR (Line
                                                             Status Register)
  182 00000114 E5D11000        LDRB             R1, [R1]    ; wait until transm
                                                            it
  183 00000118 E2111020        ANDS             R1, R1, #0x20 
                                                            ; holding register
  184 0000011C 0AFFFFFB        BEQ              put         ; empty
  185 00000120 E59F10CC        LDR              R1, =U0THR  ; R1 -> U0THR
  186 00000124 E5C10000        STRB             R0, [R1]    ; output charcter
  187 00000128 E59F10C0 
                       put0    LDR              R1, =U0LSR  ; R1 -> U0LSR
  188 0000012C E5D11000        LDRB             R1, [R1]    ; wait until
  189 00000130 E2111040        ANDS             R1, R1, #0x40 ; transmitter
  190 00000134 0AFFFFFB        BEQ              put0        ; empty (data flush



ARM Macro Assembler    Page 5 


                                                            ed)
  191 00000138 E12FFF1E        BX               LR          ; return
  192 0000013C         
  193 0000013C         ;
  194 0000013C         ; puts subroutine
  195 0000013C         ; writes the sequence of characters in a NULL-terminated
                        string to the console
  196 0000013C         ; parameters:
  197 0000013C         ; R0 - address of NULL-terminated ASCII string
  198 0000013C         ; return value:
  199 0000013C         ; R0 - ASCII code of the character read on teh console (
                       byte)
  200 0000013C         ;
  201 0000013C E92D4010 
                       puts    STMFD            SP!, {R4, LR} ; push R4 and LR
  202 00000140 E1A04000        MOV              R4, R0      ; copy R0
  203 00000144 E4D40001 
                       puts0   LDRB             R0, [R4], #1 ; get character + 
                                                            increment R4
  204 00000148 E3500000        CMP              R0, #0      ; 0?
  205 0000014C 0A000001        BEQ              puts1       ; return
  206 00000150 EBFFFFEE        BL               put         ; put character
  207 00000154 EAFFFFFA        B                puts0       ; next character
  208 00000158 E8BD8010 
                       puts1   LDMFD            SP!, {R4, PC} ; pop R4 and PC
  209 0000015C         
  210 0000015C         
  211 0000015C         ;
  212 0000015C         ; test arrays
  213 0000015C         ;
  214 0000015C         
  215 0000015C 00000001 
              00000002 
              00000003 
              00000004 ARR_A   DCD              1,  2,  3,  4
  216 0000016C 00000005 
              00000006 
              00000007 
              00000008         DCD              5,  6,  7,  8
  217 0000017C 00000009 
              0000000A 
              0000000B 
              0000000C         DCD              9, 10, 11, 12
  218 0000018C 0000000D 
              0000000E 
              0000000F 
              00000010         DCD              13, 14, 15, 16
  219 0000019C         
  220 0000019C 00000001 
              00000002 
              00000003 
              00000004 ARR_B   DCD              1,  2,  3,  4
  221 000001AC 00000005 
              00000006 
              00000007 
              00000008         DCD              5,  6,  7,  8
  222 000001BC 00000009 
              0000000A 
              0000000B 



ARM Macro Assembler    Page 6 


              0000000C         DCD              9, 10, 11, 12
  223 000001CC 0000000D 
              0000000E 
              0000000F 
              00000010         DCD              13, 14, 15, 16
  224 000001DC         
  225 000001DC                 END
              00000000 
              00000000 
              00000000 
              E002C000 
              E000C00C 
              E000C014 
              E000C000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab2-subroutines.d -o.\objects\lab2-subroutines.o -IC:\Keil_v5\ARM\RV31\
INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__
EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --list=.\listings\lab2-su
broutines.lst lab2-subroutines.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARR_R 00000020

Symbol: ARR_R
   Definitions
      At line 22 in file lab2-subroutines.s
   Uses
      At line 51 in file lab2-subroutines.s
Comment: ARR_R used once
BUFFER 00000000

Symbol: BUFFER
   Definitions
      At line 19 in file lab2-subroutines.s
   Uses
      None
Comment: BUFFER unused
globals 00000000

Symbol: globals
   Definitions
      At line 16 in file lab2-subroutines.s
   Uses
      None
Comment: globals unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARR_A 0000015C

Symbol: ARR_A
   Definitions
      At line 215 in file lab2-subroutines.s
   Uses
      At line 49 in file lab2-subroutines.s
Comment: ARR_A used once
ARR_B 0000019C

Symbol: ARR_B
   Definitions
      At line 220 in file lab2-subroutines.s
   Uses
      At line 50 in file lab2-subroutines.s
Comment: ARR_B used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 25 in file lab2-subroutines.s
   Uses
      None
Comment: RESET unused
STOP 00000018

Symbol: STOP
   Definitions
      At line 56 in file lab2-subroutines.s
   Uses
      At line 56 in file lab2-subroutines.s
Comment: STOP used once
get 000000F4

Symbol: get
   Definitions
      At line 165 in file lab2-subroutines.s
   Uses
      At line 82 in file lab2-subroutines.s
Comment: get used once
get0 000000F8

Symbol: get0
   Definitions
      At line 166 in file lab2-subroutines.s
   Uses
      At line 168 in file lab2-subroutines.s
Comment: get0 used once
gets 0000002C

Symbol: gets
   Definitions
      At line 77 in file lab2-subroutines.s
   Uses
      None
Comment: gets unused
gets1 00000038

Symbol: gets1



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 81 in file lab2-subroutines.s
   Uses
      At line 88 in file lab2-subroutines.s
Comment: gets1 used once
gets2 00000054

Symbol: gets2
   Definitions
      At line 89 in file lab2-subroutines.s
   Uses
      At line 85 in file lab2-subroutines.s
Comment: gets2 used once
inithw 000000D8

Symbol: inithw
   Definitions
      At line 148 in file lab2-subroutines.s
   Uses
      At line 28 in file lab2-subroutines.s
Comment: inithw used once
matmul 00000064

Symbol: matmul
   Definitions
      At line 103 in file lab2-subroutines.s
   Uses
      At line 53 in file lab2-subroutines.s
Comment: matmul used once
matmul0 0000006C

Symbol: matmul0
   Definitions
      At line 106 in file lab2-subroutines.s
   Uses
      At line 136 in file lab2-subroutines.s
Comment: matmul0 used once
matmul1 000000D4

Symbol: matmul1
   Definitions
      At line 137 in file lab2-subroutines.s
   Uses
      At line 108 in file lab2-subroutines.s
Comment: matmul1 used once
matmul2 00000078

Symbol: matmul2
   Definitions
      At line 110 in file lab2-subroutines.s
   Uses
      At line 133 in file lab2-subroutines.s
Comment: matmul2 used once
matmul3 000000CC

Symbol: matmul3
   Definitions
      At line 134 in file lab2-subroutines.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 112 in file lab2-subroutines.s
Comment: matmul3 used once
matmul4 00000088

Symbol: matmul4
   Definitions
      At line 115 in file lab2-subroutines.s
   Uses
      At line 127 in file lab2-subroutines.s
Comment: matmul4 used once
matmul5 000000B8

Symbol: matmul5
   Definitions
      At line 128 in file lab2-subroutines.s
   Uses
      At line 117 in file lab2-subroutines.s
Comment: matmul5 used once
max 0000001C

Symbol: max
   Definitions
      At line 65 in file lab2-subroutines.s
   Uses
      None
Comment: max unused
max1 00000028

Symbol: max1
   Definitions
      At line 69 in file lab2-subroutines.s
   Uses
      At line 67 in file lab2-subroutines.s
Comment: max1 used once
put 00000110

Symbol: put
   Definitions
      At line 181 in file lab2-subroutines.s
   Uses
      At line 83 in file lab2-subroutines.s
      At line 184 in file lab2-subroutines.s
      At line 206 in file lab2-subroutines.s

put0 00000128

Symbol: put0
   Definitions
      At line 187 in file lab2-subroutines.s
   Uses
      At line 190 in file lab2-subroutines.s
Comment: put0 used once
puts 0000013C

Symbol: puts
   Definitions
      At line 201 in file lab2-subroutines.s
   Uses
      None



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

Comment: puts unused
puts0 00000144

Symbol: puts0
   Definitions
      At line 203 in file lab2-subroutines.s
   Uses
      At line 207 in file lab2-subroutines.s
Comment: puts0 used once
puts1 00000158

Symbol: puts1
   Definitions
      At line 208 in file lab2-subroutines.s
   Uses
      At line 205 in file lab2-subroutines.s
Comment: puts1 used once
24 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BUFLEN 00000020

Symbol: BUFLEN
   Definitions
      At line 7 in file lab2-subroutines.s
   Uses
      At line 19 in file lab2-subroutines.s
Comment: BUFLEN used once
N 00000004

Symbol: N
   Definitions
      At line 6 in file lab2-subroutines.s
   Uses
      At line 22 in file lab2-subroutines.s
      At line 52 in file lab2-subroutines.s

PINSEL0 E002C000

Symbol: PINSEL0
   Definitions
      At line 9 in file lab2-subroutines.s
   Uses
      At line 149 in file lab2-subroutines.s
Comment: PINSEL0 used once
U0LCR E000C00C

Symbol: U0LCR
   Definitions
      At line 12 in file lab2-subroutines.s
   Uses
      At line 152 in file lab2-subroutines.s
Comment: U0LCR used once
U0LSR E000C014

Symbol: U0LSR
   Definitions
      At line 13 in file lab2-subroutines.s
   Uses
      At line 165 in file lab2-subroutines.s
      At line 181 in file lab2-subroutines.s
      At line 187 in file lab2-subroutines.s

U0RBR E000C000

Symbol: U0RBR
   Definitions
      At line 10 in file lab2-subroutines.s
   Uses
      At line 169 in file lab2-subroutines.s
Comment: U0RBR used once
U0THR E000C000

Symbol: U0THR
   Definitions
      At line 11 in file lab2-subroutines.s
   Uses
      At line 185 in file lab2-subroutines.s
Comment: U0THR used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

7 symbols
368 symbols in table
