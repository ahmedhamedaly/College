


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1021 2018/2019 Lab 1
    3 00000000         ; 
    4 00000000         
    5 00000000                 AREA             RESET, CODE, READONLY
    6 00000000                 ENTRY
    7 00000000         
    8 00000000         ;
    9 00000000         ; start of code
   10 00000000         ;
   11 00000000 E3A01005        LDR              R1, =5      ; x = 5
   12 00000004 E3A02006        LDR              R2, =6      ; y = 6
   13 00000008 E3A03002        LDR              R3, =2      ; Z = 2
   14 0000000C         ;
   15 0000000C         ; part (a) compute 3x^2 + 5x (100 OR 0x64)
   16 0000000C         ;
   17 0000000C E0000191        MUL              R0, R1, R1  ; R0 = x^2
   18 00000010 E3A04003        MOV              R4, #3      ; R4 = 3
   19 00000014 E0000094        MUL              R0, R4, R0  ; R0 = 3x^2
   20 00000018 E3A05005        MOV              R5, #5      ; R5 = 5
   21 0000001C E0060591        MUL              R6, R1, R5  ; R4 = 5x
   22 00000020 E0860000        ADD              R0, R6, R0  ; R0 = 3x^2 + 5x
   23 00000024         
   24 00000024         ;
   25 00000024         ; part (b) compute 2x^2 + 6xy + 3y^2 (338 OR 0x152)
   26 00000024         ;
   27 00000024 E0000191        MUL              R0, R1, R1  ; R0 = x^2
   28 00000028 E3A04002        MOV              R4, #2      ; R4 = 2
   29 0000002C E0000094        MUL              R0, R4, R0  ; R0 = 2x^2
   30 00000030 E3A05006        MOV              R5, #6      ; R5 = 6
   31 00000034 E0060192        MUL              R6, R2, R1  ; R6 = xy
   32 00000038 E0060695        MUL              R6, R5, R6  ; R6 = 6xy
   33 0000003C E3A07003        MOV              R7, #3      ; R7 = 3
   34 00000040 E0080292        MUL              R8, R2, R2  ; R8 = y^2
   35 00000044 E0080897        MUL              R8, R7, R8  ; R8 = 3y^2
   36 00000048 E0800006        ADD              R0, R0, R6  ; R0 = 2x^2 + 6xy
   37 0000004C E0800008        ADD              R0, R0, R8  ; R0 = 2x^2 + 6xy +
                                                             3y^2
   38 00000050         
   39 00000050         ;
   40 00000050         ; part (c) compute x^3 - 4x^2 + 3x + 8 (48 OR 0x30)
   41 00000050         ;
   42 00000050 E0040191        MUL              R4, R1, R1  ; R4 = x^2
   43 00000054 E0000491        MUL              R0, R1, R4  ; R0 = x^3
   44 00000058 E3A05004        MOV              R5, #4      ; R5 = 4
   45 0000005C E0060495        MUL              R6, R5, R4  ; R6 = 4x^2
   46 00000060 E3A07003        MOV              R7, #3      ; R7 = 3
   47 00000064 E0080197        MUL              R8, R7, R1  ; R8 = 3x
   48 00000068 E0409006        SUB              R9, R0, R6  ; R9 = x^3 - 4x^2
   49 0000006C E089A008        ADD              R10, R9, R8 ; R10 = x^3 - 4x^2 
                                                            + 3x 
   50 00000070 E28A0008        ADD              R0, R10, #8 ; R0 = x^3 - 4x^2 +
                                                             3x + 8 
   51 00000074         
   52 00000074         ;
   53 00000074         ; part (d) compute 3x^4 - 5x - 16y^4z^4 (-329926 OR 0xFF
                       FAF73A)
   54 00000074         ;
   55 00000074 E0040191        MUL              R4, R1, R1  ; R4 = x^2



ARM Macro Assembler    Page 2 


   56 00000078 E0000494        MUL              R0, R4, R4  ; R0 = x^4
   57 0000007C E3A05003        MOV              R5, #3      ; R5 = 3
   58 00000080 E0000095        MUL              R0, R5, R0  ; R0 = 3x^4
   59 00000084 E3A06005        MOV              R6, #5      ; R6 = 5
   60 00000088 E0070691        MUL              R7, R1, R6  ; R7 = 5x
   61 0000008C E0080292        MUL              R8, R2, R2  ; R8 = y^2
   62 00000090 E0090898        MUL              R9, R8, R8  ; R9 = y^4
   63 00000094 E00A0393        MUL              R10, R3, R3 ; R10 = z^2
   64 00000098 E00B0A9A        MUL              R11, R10, R10 ; R11 = z^4
   65 0000009C E3A0C010        MOV              R12, #16    ; R12 = 16
   66 000000A0 E0400007        SUB              R0, R0, R7  ; R0 = 3x^4 - 5x
   67 000000A4 E0080B99        MUL              R8, R9, R11 ; R8 = y^4z^4
   68 000000A8 E00A089C        MUL              R10, R12, R8 ; R10 = 16y^4z^4
   69 000000AC E040000A        SUB              R0, R0, R10 ; R0 = 3x^4 - 5x - 
                                                            16y^4z^4
   70 000000B0         
   71 000000B0         
   72 000000B0 EAFFFFFE 
                       L       B                L           ; infinite loop to 
                                                            end programme
   73 000000B4         
   74 000000B4                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab1.d -o.\objects\lab1.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMS
IS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine
="__UVISION_VERSION SETA 516" --list=.\listings\lab1.lst lab1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

L 000000B0

Symbol: L
   Definitions
      At line 72 in file lab1.s
   Uses
      At line 72 in file lab1.s
Comment: L used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 5 in file lab1.s
   Uses
      None
Comment: RESET unused
2 symbols
334 symbols in table
