


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1021 2018/2019 Lab 5
    3 00000000         ;
    4 00000000         ; RAM @ 0x4000000 sz = 0x10000 (64K)
    5 00000000         ;
    6 00000000         
    7 00000000         ;
    8 00000000         ; hardware registers
    9 00000000         ;
   10 00000000         
   11 00000000 E002C000 
                       PINSEL0 EQU              0xE002C000
   12 00000000         
   13 00000000 E000C000 
                       U0RBR   EQU              0xE000C000
   14 00000000 E000C000 
                       U0THR   EQU              0xE000C000
   15 00000000 E000C00C 
                       U0LCR   EQU              0xE000C00C
   16 00000000 E000C014 
                       U0LSR   EQU              0xE000C014
   17 00000000         
   18 00000000         
   19 00000000                 AREA             RESET, CODE, READONLY
   20 00000000                 ENTRY
   21 00000000         
   22 00000000         ; 
   23 00000000         ; hardware initialisation
   24 00000000         ;
   25 00000000 E59FD1C0        LDR              R13, =0x40010000 ; initialse SP
                                                            
   26 00000004 E59F01C0        LDR              R0, =PINSEL0 ; enable UART0 TxD
                                                             and RxD signals
   27 00000008 E3A01050        MOV              R1, #0x50   ;
   28 0000000C E5C01000        STRB             R1, [R0]    ;
   29 00000010 E59F01B8        LDR              R0, =U0LCR  ; R0 - > U0LCR (lin
                                                            e control register)
                                                            
   30 00000014 E3A01002        LDR              R1, =0x02   ; 7 data bits + par
                                                            ity
   31 00000018 E5C01000        STRB             R1, [R0]    ;
   32 0000001C         
   33 0000001C         ;
   34 0000001C         ; MY CODE
   35 0000001C         ;
   36 0000001C E59F01B0        LDR              R0, =STR0   ; R0 -> "Input Stri
                                                            ng"
   37 00000020 EB000060        BL               PUTS        ; Print "Input Stri
                                                            ng
   38 00000024         
   39 00000024 E3A05101        LDR              R5, =0x40000000 
                                                            ; s0 = 0x40000000
   40 00000028 E59F61A8        LDR              R6, =0x40000200 
                                                            ; Duplicate of s0
   41 0000002C E59F71A8        LDR              R7, =0x40000400 
                                                            ; s1 = 0x40000400
   42 00000030         
   43 00000030         
   44 00000030 EB00004A 



ARM Macro Assembler    Page 2 


                       Gs0     BL               GET         ; Get s0  
   45 00000034 E350000D        CMP              R0, #0x0D   ; Compare to enter 
                                                            key
   46 00000038 0A000005        BEQ              NEL         ; If (enter key) br
                                                            anch to NEL (NExt L
                                                            ine) 
   47 0000003C E5C50000        STRB             R0, [R5]    ; Store s0 into mem
                                                            ory 
   48 00000040 E5C60000        STRB             R0, [R6]    ; Store dupOfs0 int
                                                            o memory
   49 00000044 E2855001        ADD              R5, R5, #1  ; Go to next memory
                                                             slot (s0)
   50 00000048 E2866001        ADD              R6, R6, #1  ; Go to next memory
                                                             slot (dupOfs0)    
                                                            
   51 0000004C EB00004A        BL               PUT         ; Print character
   52 00000050 EAFFFFF6        B                Gs0         ; Branch Gs0 (Get s
                                                            0) 
   53 00000054         
   54 00000054         
   55 00000054 E3A0000A 
                       NEL     MOV              R0, #0x0A   ; If its an enter, 
                                                            go next line
   56 00000058 EB000047        BL               PUT         ; Print next line
   57 0000005C EB00003F 
                       Gs1     BL               GET         ; Get s1
   58 00000060 E350000D        CMP              R0, #0x0D   ; Compare to enter 
                                                            key
   59 00000064 0A000004        BEQ              CAL         ; If (enter key) br
                                                            anch CAL (CALculate
                                                             if "Y" or "N")
   60 00000068 E5C70000        STRB             R0, [R7]    ; Stores s1 into me
                                                            mory  
   61 0000006C E2877001        ADD              R7, R7, #1  ; Go to next memory
                                                             slot (s1) 
   62 00000070 E28AA001        ADD              R10, R10, #1 ; Counter1++      
                                                                               
                                                              
   63 00000074 EB000040        BL               PUT         ; Print character  
                                                                 
   64 00000078 EAFFFFF7        B                Gs1         ; Branch Gs1 (Get s
                                                            1)
   65 0000007C         
   66 0000007C         
   67 0000007C E3A05101 
                       CAL     LDR              R5, =0x40000000 ; Load MEM(s0)
   68 00000080 E59F7154        LDR              R7, =0x40000400 ; Load MEM(s1)
   69 00000084         
   70 00000084 E5D58000 
                       CIA     LDRB             R8, [R5]    ; Load s0 to R8
   71 00000088 E5D79000        LDRB             R9, [R7]    ; Load s1 to R9
   72 0000008C         
   73 0000008C E1580009        CMP              R8, R9      ; Compare s0 to s1
   74 00000090 1A000006        BNE              Ns0         ; Branch (if not eq
                                                            ual) to Ns0 (Next s
                                                            0)
   75 00000094 E28BB001        ADD              R11, R11, #1 ; Counter2++
   76 00000098 E3A08030        MOV              R8, #0x30   ; Move 0 to R8
   77 0000009C E5C58000        STRB             R8, [R5]    ; Store 0 to s0



ARM Macro Assembler    Page 3 


   78 000000A0 E2855001        ADD              R5, R5, #1  ; Next character in
                                                             s0
   79 000000A4 E15A000B        CMP              R10, R11    ; Compare counter1 
                                                            to counter2
   80 000000A8 0A000009        BEQ              Y           ; Branch (if equal)
                                                             to Y
   81 000000AC EA000005        B                Ns1         ; Branch Ns1 (Next 
                                                            s1)
   82 000000B0         
   83 000000B0 E3590000 
                       Ns0     CMP              R9, #0      ; Compare s1 to 0
   84 000000B4 0A000009        BEQ              N           ; Branch (if equal)
                                                             to N
   85 000000B8 E3580000        CMP              R8, #0      ; Compare s0 to 0
   86 000000BC 0A000001        BEQ              Ns1         ; Branch (if equal)
                                                             to Ns1 (Next s1)
   87 000000C0 E2855001        ADD              R5, R5, #1  ; Next character in
                                                             s0
   88 000000C4 EAFFFFEE        B                CIA         ; Branch CIA (Check
                                                             If Anagram)
   89 000000C8         
   90 000000C8 E2877001 
                       Ns1     ADD              R7, R7, #1  ; Next character in
                                                             s1
   91 000000CC E3A05101        LDR              R5, =0x40000000 ; Load MEM(s0) 
                                                            to R5
   92 000000D0 EAFFFFEB        B                CIA         ; Branch CIA (Check
                                                             If Anagram)
   93 000000D4         
   94 000000D4 E59F0104 
                       Y       LDR              R0, =YES    ; Load String
   95 000000D8 EB000032        BL               PUTS        ; Print "Y"
   96 000000DC EA000002        B                REC         ; Branch REC (REset
                                                             Counters)
   97 000000E0         
   98 000000E0 E59F00FC 
                       N       LDR              R0, =NO     ; Load String
   99 000000E4 EB00002F        BL               PUTS        ; Print "N"
  100 000000E8 EAFFFFFF        B                REC         ; Branch REC (REset
                                                             Counters)
  101 000000EC         
  102 000000EC         
  103 000000EC E3A0A000 
                       REC     MOV              R10, #0     ; Reset counter1
  104 000000F0 E3A0B000        MOV              R11, #0     ; Reset counter2
  105 000000F4         
  106 000000F4 E59F70E0        LDR              R7, =0x40000400 ; Load MEM(s1) 
                                                            to R7
  107 000000F8 E5D7C000 
                       Rs1     LDRB             R12, [R7]   ; Load s1 to R12
  108 000000FC E35C0000        CMP              R12, #0     ; Compare s1 to 0
  109 00000100 0A000003        BEQ              LMR         ; Branch (if equal)
                                                             to LMR (Load Memor
                                                            y Registers)
  110 00000104 E3A0C000        MOV              R12, #0x00  ; Move 0 into R12
  111 00000108 E5C7C000        STRB             R12, [R7]   ; Store 0 into s1
  112 0000010C E2877001        ADD              R7, R7, #1  ; Next character in
                                                             s1
  113 00000110 EAFFFFF8        B                Rs1         ; Branch Rs1 (Reset



ARM Macro Assembler    Page 4 


                                                             s1)
  114 00000114         
  115 00000114         
  116 00000114 E3A05101 
                       LMR     LDR              R5, =0x40000000 ; Load MEM(s0) 
                                                            to R5
  117 00000118 E59F60B8        LDR              R6, =0x40000200 ; Load MEM(dupO
                                                            fs0) to R6
  118 0000011C E59F70B8        LDR              R7, =0x40000400 ; Load MEM(s1) 
                                                            to R7
  119 00000120         
  120 00000120 E5D58000 
                       Rs0     LDRB             R8, [R5]    ; Load s0 to R8
  121 00000124 E5D69000        LDRB             R9, [R6]    ; Load dupOfs0 to R
                                                            9
  122 00000128 E3580000        CMP              R8, #0      ; Compare s0 to 0
  123 0000012C 0AFFFFCA        BEQ              Gs1         ; Branch (if equal)
                                                             to Gs1
  124 00000130 E1580009        CMP              R8, R9      ; Compare s0 to dup
                                                            Ofs0
  125 00000134 0A000000        BEQ              NEC         ; Branch (if equal)
                                                             to NEC (NExt Chara
                                                            cter)
  126 00000138 E5C59000        STRB             R9, [R5]    ; Replace s0 with t
                                                            he duplicate of s0
  127 0000013C E2855001 
                       NEC     ADD              R5, R5, #1  ; Next character in
                                                             s0
  128 00000140 E2866001        ADD              R6, R6, #1  ; Next character in
                                                             dupOfs0
  129 00000144 EAFFFFF5        B                Rs0         ; Branch Rs0 (Reset
                                                             s0 to dupOfs0) 
  130 00000148         
  131 00000148         
  132 00000148         
  133 00000148 49 6E 70 
              75 74 20 
              53 74 72 
              69 6E 67 
              0A 00    STR0    DCB              "Input String\n", 0
  134 00000156 0A 59 0A 
              00       YES     DCB              "\nY\n", 0
  135 0000015A 0A 4E 0A 
              00       NO      DCB              "\nN\n", 0
  136 0000015E         
  137 0000015E         ;
  138 0000015E         ; Subroutines
  139 0000015E         ; 
  140 0000015E         
  141 0000015E         ; GET
  142 0000015E         ;
  143 0000015E         ; Leaf function which returns ASCII character typed in U
                       ART #1 window in R0
  144 0000015E         ;
  145 0000015E 00 00 E59F1080 
                       GET     LDR              R1, =U0LSR  ; R1 -> U0LSR (Line
                                                             Status Register)
  146 00000164 E5910000 
                       GET0    LDR              R0, [R1]    ; wait until



ARM Macro Assembler    Page 5 


  147 00000168 E2100001        ANDS             R0, #0x01   ; receiver data
  148 0000016C 0AFFFFFC        BEQ              GET0        ; ready
  149 00000170 E59F1074        LDR              R1, =U0RBR  ; R1 -> U0RBR (Rece
                                                            iver Buffer Registe
                                                            r)
  150 00000174 E5D10000        LDRB             R0, [R1]    ; get received data
                                                            
  151 00000178 E12FFF1E        BX               LR          ; return
  152 0000017C         
  153 0000017C         ; 
  154 0000017C         ; PUT
  155 0000017C         ;
  156 0000017C         ; Leaf function which sends ASCII character in R0 to UAR
                       T #1 window
  157 0000017C         ;
  158 0000017C E59F1064 
                       PUT     LDR              R1, =U0LSR  ; R1 -> U0LSR (Line
                                                             Status Register)
  159 00000180 E5D11000        LDRB             R1, [R1]    ; wait until transm
                                                            it
  160 00000184 E2111020        ANDS             R1, R1, #0x20 
                                                            ; holding register
  161 00000188 0AFFFFFB        BEQ              PUT         ; empty
  162 0000018C E59F1058        LDR              R1, =U0THR  ; R1 -> U0THR
  163 00000190 E5C10000        STRB             R0, [R1]    ; output charcter
  164 00000194 E59F104C 
                       PUT0    LDR              R1, =U0LSR  ; R1 -> U0LSR
  165 00000198 E5D11000        LDRB             R1, [R1]    ; wait until 
  166 0000019C E2111040        ANDS             R1, R1, #0x40 ; transmitter
  167 000001A0 0AFFFFFB        BEQ              PUT0        ; empty (data flush
                                                            ed)
  168 000001A4 E12FFF1E        BX               LR          ; return
  169 000001A8         
  170 000001A8         ; 
  171 000001A8         ; PUTS
  172 000001A8         ;
  173 000001A8         ; Sends NUL terminated ASCII string (address in R0) to U
                       ART #1 window
  174 000001A8         ;
  175 000001A8 E92D4010 
                       PUTS    PUSH             {R4, LR}    ; push R4 and LR
  176 000001AC E1A04000        MOV              R4, R0      ; copy R0
  177 000001B0 E4D40001 
                       PUTS0   LDRB             R0, [R4], #1 ; get character + 
                                                            increment R4
  178 000001B4 E3500000        CMP              R0, #0      ; 0?
  179 000001B8 0A000001        BEQ              PUTS1       ; return
  180 000001BC EBFFFFEE        BL               PUT         ; put character
  181 000001C0 EAFFFFFA        B                PUTS0       ; next character
  182 000001C4 E8BD8010 
                       PUTS1   POP              {R4, PC}    ; pop R4 and PC
  183 000001C8         
  184 000001C8                 END
              40010000 
              E002C000 
              E000C00C 
              00000000 
              40000200 
              40000400 



ARM Macro Assembler    Page 6 


              00000000 
              00000000 
              E000C014 
              E000C000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab5.d -o.\objects\lab5.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMS
IS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --predefine
="__UVISION_VERSION SETA 526" --list=.\listings\lab5.lst lab5.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CAL 0000007C

Symbol: CAL
   Definitions
      At line 67 in file lab5.s
   Uses
      At line 59 in file lab5.s
Comment: CAL used once
CIA 00000084

Symbol: CIA
   Definitions
      At line 70 in file lab5.s
   Uses
      At line 88 in file lab5.s
      At line 92 in file lab5.s

GET 00000160

Symbol: GET
   Definitions
      At line 145 in file lab5.s
   Uses
      At line 44 in file lab5.s
      At line 57 in file lab5.s

GET0 00000164

Symbol: GET0
   Definitions
      At line 146 in file lab5.s
   Uses
      At line 148 in file lab5.s
Comment: GET0 used once
Gs0 00000030

Symbol: Gs0
   Definitions
      At line 44 in file lab5.s
   Uses
      At line 52 in file lab5.s
Comment: Gs0 used once
Gs1 0000005C

Symbol: Gs1
   Definitions
      At line 57 in file lab5.s
   Uses
      At line 64 in file lab5.s
      At line 123 in file lab5.s

LMR 00000114

Symbol: LMR
   Definitions
      At line 116 in file lab5.s
   Uses
      At line 109 in file lab5.s
Comment: LMR used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

N 000000E0

Symbol: N
   Definitions
      At line 98 in file lab5.s
   Uses
      At line 84 in file lab5.s
Comment: N used once
NEC 0000013C

Symbol: NEC
   Definitions
      At line 127 in file lab5.s
   Uses
      At line 125 in file lab5.s
Comment: NEC used once
NEL 00000054

Symbol: NEL
   Definitions
      At line 55 in file lab5.s
   Uses
      At line 46 in file lab5.s
Comment: NEL used once
NO 0000015A

Symbol: NO
   Definitions
      At line 135 in file lab5.s
   Uses
      At line 98 in file lab5.s
Comment: NO used once
Ns0 000000B0

Symbol: Ns0
   Definitions
      At line 83 in file lab5.s
   Uses
      At line 74 in file lab5.s
Comment: Ns0 used once
Ns1 000000C8

Symbol: Ns1
   Definitions
      At line 90 in file lab5.s
   Uses
      At line 81 in file lab5.s
      At line 86 in file lab5.s

PUT 0000017C

Symbol: PUT
   Definitions
      At line 158 in file lab5.s
   Uses
      At line 51 in file lab5.s
      At line 56 in file lab5.s
      At line 63 in file lab5.s
      At line 161 in file lab5.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 180 in file lab5.s

PUT0 00000194

Symbol: PUT0
   Definitions
      At line 164 in file lab5.s
   Uses
      At line 167 in file lab5.s
Comment: PUT0 used once
PUTS 000001A8

Symbol: PUTS
   Definitions
      At line 175 in file lab5.s
   Uses
      At line 37 in file lab5.s
      At line 95 in file lab5.s
      At line 99 in file lab5.s

PUTS0 000001B0

Symbol: PUTS0
   Definitions
      At line 177 in file lab5.s
   Uses
      At line 181 in file lab5.s
Comment: PUTS0 used once
PUTS1 000001C4

Symbol: PUTS1
   Definitions
      At line 182 in file lab5.s
   Uses
      At line 179 in file lab5.s
Comment: PUTS1 used once
REC 000000EC

Symbol: REC
   Definitions
      At line 103 in file lab5.s
   Uses
      At line 96 in file lab5.s
      At line 100 in file lab5.s

RESET 00000000

Symbol: RESET
   Definitions
      At line 19 in file lab5.s
   Uses
      None
Comment: RESET unused
Rs0 00000120

Symbol: Rs0
   Definitions
      At line 120 in file lab5.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 129 in file lab5.s
Comment: Rs0 used once
Rs1 000000F8

Symbol: Rs1
   Definitions
      At line 107 in file lab5.s
   Uses
      At line 113 in file lab5.s
Comment: Rs1 used once
STR0 00000148

Symbol: STR0
   Definitions
      At line 133 in file lab5.s
   Uses
      At line 36 in file lab5.s
Comment: STR0 used once
Y 000000D4

Symbol: Y
   Definitions
      At line 94 in file lab5.s
   Uses
      At line 80 in file lab5.s
Comment: Y used once
YES 00000156

Symbol: YES
   Definitions
      At line 134 in file lab5.s
   Uses
      At line 94 in file lab5.s
Comment: YES used once
25 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

PINSEL0 E002C000

Symbol: PINSEL0
   Definitions
      At line 11 in file lab5.s
   Uses
      At line 26 in file lab5.s
Comment: PINSEL0 used once
U0LCR E000C00C

Symbol: U0LCR
   Definitions
      At line 15 in file lab5.s
   Uses
      At line 29 in file lab5.s
Comment: U0LCR used once
U0LSR E000C014

Symbol: U0LSR
   Definitions
      At line 16 in file lab5.s
   Uses
      At line 145 in file lab5.s
      At line 158 in file lab5.s
      At line 164 in file lab5.s

U0RBR E000C000

Symbol: U0RBR
   Definitions
      At line 13 in file lab5.s
   Uses
      At line 149 in file lab5.s
Comment: U0RBR used once
U0THR E000C000

Symbol: U0THR
   Definitions
      At line 14 in file lab5.s
   Uses
      At line 162 in file lab5.s
Comment: U0THR used once
5 symbols
364 symbols in table
